5*4
4^2
20/5
sqrt(2)
sqrt(4)
8-9
8-3
exit
quit
q()
install.packages("curl", dependencies = TRUE)
install.packages("httr", dependencies = TRUE)
install.packages("swirl", dependencies = TRUE)
library("swirl")
select_language()
install_course_github("ifunam", "programacion-estadistica-r")
swirl()
help.start()
print()
print()
?print
apropos("class")
example("read.table")
??regression
vignette("test")
vignette("tests")
swirl()
3+7
mi_variable <- (180 / 6) - 15
'mi_variable'
mi_variable
y <- c(561, 1105, 1729, 2465, 2821)
print(y)
1:100
c(1.1,2.2,3.3,4.4) - c(1,1,1,1)
c(1,2,3,4,5,6,7,8,9,10) -c(1,2)
ls()
"¡Hola Mundo"
"¡Hola Mundo!"
colores <- c("rojo", "azul", "verde", "azul", "rojo")
print(colores)
complejo <- 2+1i
mi_variable == 15
length(complejo) <- 3
print(complejo)
2^1024
8+9/7/4
0/0
fecha_primer_curso_r <- Sys.Date()
fecha_primer_curso_R <- Sys.Date()
print(fecha_primer_curso_R)
vector("numeric", lenght=10)
vector("numeric", lenght = 10)
vector("numerical", length = 10)
vector(mode = "numerical", length = 10)
bye()
swirl()
vector("numeric", length = 10)
vector("character", length = 10)
vector("logical", length = 10)
list(0, "Hola", TRUE)
c(T, 19, 1+3i)
c <- vector("numeric", length = 5)
c
as.logical(c)
class(c)
class(as.logical(c))
m <- matrix(data = 1:12, nrow = 4, ncol = 3)
m
factor(colores)
data.frame(llave=y, color=colores)
mi_variable <- (180 / 60) - 15
mi_variable
mi_vector <- 11:30
mi_vector
mi_vector[3]
mi_vector[1:5]
mi_vector[c(4,6,13)]
mi_vector[c(6,13,4)]
mi_vector[[3]]
mi_vector[-9:-15]
mi_vector[rep(c(T,F),10)]
mi_vector[rep(c(TRUE,FALSE),10)]
mi_vector[c(FALSE, FALSE, TRUE)]
mi_vector > 20
mi_vector[(mi_vector > 20)]
mi_arreglo <- array(c(1:18), dim = c(3,3,2))
mi_arreglo
mi_arreglo[1,3,2]
mi_arreglo[1:2,1:2,1]
mi_matriz <- array(c(1:9), dim = c(3,3,3))
mi_matriz <- matrix(data = 1:9, nrow = 3, ncol = 3)
mi_matriz[1,]
mi_matriz[,1]
mi_matriz[2:3,]
mi_matriz[c(1,3)]
mi_matriz[c(1,3),]
carro <- list(color="rojo", nllantas=4, marca="Renault", ncilindros=4)
carro$color
carro[c("ncilindros","nllantas")]
carro[["marca"]]
carro[["mac", exact=FALSE]]
carro
carro[["mar", exact=FALSE]]
camioneta <- list(color="azul", nllantas=4, marca="BMW", ncilindros=6)
cochera <- list(carro, camioneta)
cochera
cochera[[c(2,1)]]
cars
cars$speed
cars$dist>100
cars$speed[cars$dist>100]
datos <- read.table("swirl_temp/inmigintnalpry.csv", header = TRUE, sep = ",", fileEncoding = "latin1")
datos_2 <- read.table("swirl_temp/inmigintnalpry.csv", header = TRUE, sep = ",")
datos_2 <- read.table("swirl_temp/inmigintnalpry.csv", header = TRUE, sep = ",")
datos_2 <- read.table("swirl_temp/inmigintnalpry.csv", header = TRUE, sep = ",") ok
datos_2 <- read.table("swirl_temp/inmigintnalpry.csv", header = TRUE, sep = ",")
ok
datos2 <- read.table("swirl_temp/inmigintnalpry.csv", header=TRUE, sep=",")
datos
datos
View(datos)
datos <- read.table("swirl_temp/inmigintnalpry.csv", header = TRUE, sep = ",", fileEncoding = "latin1", nrows = 100)
inicial <- read.table("swirl_temp/inmigintnalpry.csv", header = TRUE, sep = ",", fileEncoding = "latin1", nrows = 100)
clases <- sapply(inicial, class)
clases
datos <- read.table("swirl_temp/inmigintnalpry.csv", header = TRUE, sep = ",", fileEncoding = "latin1", colClasses = clases)
save(datos, clases, file = "swirl_temp/datos_inmigrates.RData")
rm(datos, clases)
ls()
load("swirl_temp/datos_inmigrates.RData")
ls()
write.table(datos, file="swirl_temp/datos.txt")
?par
par()
par_orig <- par()
par("col")
swirl::swirl()
bye()
swirl::bye()
swirl::swirl()
data("diamonds")
diamonds
View(diamonds)
?qplot
qplot(color, data=diamonds)
qplot(carat, price, data=diamonds)
qplot(log(carat), log(price), data = diamonds)
qplot(carat, x*y*z, data = diamonds)
qplot(carat, price, data = diamonds, color = color)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, alpha = I(1/10))
qplot(carat, price, data = diamonds, alpha = I(1/100))
qplot(carat, price, data = diamonds, size = table)
qplot(carat, price, data = diamonds, facets = color ~ .)
qplot(carat, price, data = diamonds, geom = c("point", "smooth"))
qplot(color, price/carat, data = diamonds, geom = "jittler")
qplot(color, price/carat, data = diamonds, geom = "jitter")
qplot(color, price/carat, data = diamonds, geom = "boxplot")
qnorm(0.5,0,1)
qnorm(1,0,1)
swirl::swirl()
?Normal
?Distributions
?bimon
?rbinom
rbinom(1,7,0.5)
resultado <- rbinom(100000,7,0.5)
tail(resultado)
tail(resultado > 5)
mean(resultado >  5)
?set.seed
install.packages("KernSmooth")
library(KernSmooth)
q()
dir()
dir.exists("files")
getwd()
setwd("c/Users/jamse/Desktop/coursera/data-science/data-cleaning/files")
setwd("c:/Users/jamse/Desktop/coursera/data-science/data-cleaning/files")
getwd()
url
url
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url = url, destfile = getwd())
?download.file
download.file(url = url, destfile = getwd(), cacheOK = TRUE)
download.file(url = url, destfile = getwd(), method = 'internal')
download.file(url = url, destfile = getwd(), method = 'wininet')
search('Permission denied')
searchpaths("'Permission denied")
?'Permission denied
exit
